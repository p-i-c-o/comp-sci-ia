/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package monnickendam.com.ia;

import java.io.File;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.File;

import java.io.FileInputStream;

import java.io.FileNotFoundException;

import java.io.FileOutputStream;

import java.io.IOException;

import java.io.ObjectInputStream;

import java.io.ObjectOutputStream;

/**
 *
 * @author elie
 */
public class NewFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewFrame
     */
    public NewFrame() {
        initComponents();
        loadDatabaseFiles();
        
    }
    
    private FoodDB WorkingDB = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Today = new javax.swing.JPanel();
        Meals = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mealsTable = new javax.swing.JTable();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        mealSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Add = new javax.swing.JPanel();
        macroPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        calorieField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        proteinField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        carbField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        fatField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        infoPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        brandField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        sizeField = new javax.swing.JTextField();
        typeComboBox = new javax.swing.JComboBox<>();
        quantityLabel = new javax.swing.JLabel();
        UnitLabel = new javax.swing.JLabel();
        infoPanel1 = new javax.swing.JPanel();
        quantityLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        DemoData = new javax.swing.JButton();
        Stats = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        LabelTotalItems = new javax.swing.JLabel();
        LabelDrinkCount = new javax.swing.JLabel();
        LabelMealCount = new javax.swing.JLabel();
        LabelSnackCount = new javax.swing.JLabel();
        DBInfoRefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        NewDBNameField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        CreateDB = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        RefreshList = new javax.swing.JButton();
        DatabaseSelector = new javax.swing.JComboBox<>();
        LoadSelectedDB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        ManualSave = new javax.swing.JButton();
        ExportDBToFile = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        DebugSHORT = new javax.swing.JLabel();
        DebugLONG = new javax.swing.JLabel();
        DebugPATH = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(930, 536));

        javax.swing.GroupLayout TodayLayout = new javax.swing.GroupLayout(Today);
        Today.setLayout(TodayLayout);
        TodayLayout.setHorizontalGroup(
            TodayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        TodayLayout.setVerticalGroup(
            TodayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Today", Today);

        mealsTable.setAutoCreateRowSorter(true);
        mealsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(mealsTable);

        jRadioButton1.setText("Meal");

        jRadioButton2.setText("Snack");

        jRadioButton3.setText("Drink");

        jRadioButton4.setSelected(true);
        jRadioButton4.setText("All");

        jLabel2.setText("Filter");

        jLabel5.setText("Search");

        javax.swing.GroupLayout MealsLayout = new javax.swing.GroupLayout(Meals);
        Meals.setLayout(MealsLayout);
        MealsLayout.setHorizontalGroup(
            MealsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
            .addGroup(MealsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mealSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        MealsLayout.setVerticalGroup(
            MealsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MealsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MealsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4)
                    .addComponent(jLabel2)
                    .addComponent(mealSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Meals", Meals);

        macroPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Macronutrients per 100 g/ml"));

        jLabel1.setText("Calories");

        calorieField.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel3.setText("kcal");

        jLabel4.setText("Protein");

        jLabel10.setText("g");

        jLabel6.setText("Carbohydrates");

        jLabel8.setText("Fats");

        jLabel9.setText("g");

        jLabel7.setText("g");

        javax.swing.GroupLayout macroPanelLayout = new javax.swing.GroupLayout(macroPanel);
        macroPanel.setLayout(macroPanelLayout);
        macroPanelLayout.setHorizontalGroup(
            macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(macroPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(macroPanelLayout.createSequentialGroup()
                        .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(49, 49, 49)
                        .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(proteinField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calorieField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(macroPanelLayout.createSequentialGroup()
                        .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(macroPanelLayout.createSequentialGroup()
                                .addComponent(fatField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(macroPanelLayout.createSequentialGroup()
                                .addComponent(carbField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        macroPanelLayout.setVerticalGroup(
            macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(macroPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(calorieField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(proteinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(carbField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(macroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(fatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        infoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("General Info"));

        jLabel13.setText("Item Name");

        nameField.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel15.setText("Brand");

        jLabel17.setText("Type");

        jLabel18.setText("Size");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Snack", "Meal", "Drink" }));
        typeComboBox.setSelectedItem("");
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        UnitLabel.setText("   ");

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameField)
                    .addComponent(brandField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(typeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(UnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(brandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLabel)
                    .addComponent(UnitLabel))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        infoPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Final Step"));

        jButton1.setText("Add to Meal List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoPanel1Layout = new javax.swing.GroupLayout(infoPanel1);
        infoPanel1.setLayout(infoPanel1Layout);
        infoPanel1Layout.setHorizontalGroup(
            infoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPanel1Layout.createSequentialGroup()
                .addGroup(infoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(infoPanel1Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(quantityLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        infoPanel1Layout.setVerticalGroup(
            infoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(quantityLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DemoData.setText("Add DEMO");
        DemoData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DemoDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddLayout = new javax.swing.GroupLayout(Add);
        Add.setLayout(AddLayout);
        AddLayout.setHorizontalGroup(
            AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(macroPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DemoData, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        AddLayout.setVerticalGroup(
            AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(infoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(macroPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(infoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 245, Short.MAX_VALUE)
                .addComponent(DemoData)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add", Add);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected Database Info"));
        jPanel1.setMaximumSize(new java.awt.Dimension(154, 169));
        jPanel1.setMinimumSize(new java.awt.Dimension(154, 169));

        jLabel11.setText("Total Items");

        jLabel12.setText("Drinks");

        jLabel14.setText("Meals");

        jLabel16.setText("Snacks");

        LabelTotalItems.setFont(new java.awt.Font("Liberation Sans", 2, 13)); // NOI18N
        LabelTotalItems.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelTotalItems.setText("       ");

        LabelDrinkCount.setFont(new java.awt.Font("Liberation Sans", 2, 13)); // NOI18N
        LabelDrinkCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelDrinkCount.setText("        ");

        LabelMealCount.setFont(new java.awt.Font("Liberation Sans", 2, 13)); // NOI18N
        LabelMealCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelMealCount.setText("     ");

        LabelSnackCount.setFont(new java.awt.Font("Liberation Sans", 2, 13)); // NOI18N
        LabelSnackCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelSnackCount.setText("      ");

        DBInfoRefresh.setText("Refresh");
        DBInfoRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DBInfoRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DBInfoRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelTotalItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelDrinkCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelMealCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelSnackCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(LabelTotalItems))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(LabelDrinkCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(LabelMealCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(LabelSnackCount))
                .addGap(18, 18, 18)
                .addComponent(DBInfoRefresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Database Creator"));

        NewDBNameField.setToolTipText("");

        jLabel20.setText("Database Name");

        CreateDB.setText("Create DB");
        CreateDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CreateDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewDBNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(NewDBNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CreateDB)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Database Selector"));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel22.setText("Select DB");

        RefreshList.setText("Refresh list");
        RefreshList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshListActionPerformed(evt);
            }
        });

        LoadSelectedDB.setText("Load");
        LoadSelectedDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadSelectedDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RefreshList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DatabaseSelector, 0, 232, Short.MAX_VALUE))
                    .addComponent(LoadSelectedDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(DatabaseSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RefreshList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoadSelectedDB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Database File Options"));

        ManualSave.setText("Manual Save");
        ManualSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManualSaveActionPerformed(evt);
            }
        });

        ExportDBToFile.setText("Export DB to file");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ManualSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExportDBToFile, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ManualSave)
                .addGap(18, 18, 18)
                .addComponent(ExportDBToFile)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Working Database Info"));

        jLabel19.setText("Shortname");

        jLabel21.setText("Longname");

        jLabel23.setText("Path");

        DebugSHORT.setFont(new java.awt.Font("Liberation Sans", 2, 13)); // NOI18N
        DebugSHORT.setText("No loaded DB");

        DebugLONG.setFont(new java.awt.Font("Liberation Sans", 2, 13)); // NOI18N
        DebugLONG.setText("No loaded DB");

        DebugPATH.setFont(new java.awt.Font("Liberation Sans", 2, 13)); // NOI18N
        DebugPATH.setText("No loaded DB");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel21)
                    .addComponent(jLabel23))
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DebugSHORT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DebugLONG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DebugPATH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(DebugSHORT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(DebugLONG))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(DebugPATH))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout StatsLayout = new javax.swing.GroupLayout(Stats);
        Stats.setLayout(StatsLayout);
        StatsLayout.setHorizontalGroup(
            StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatsLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        StatsLayout.setVerticalGroup(
            StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(StatsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Misc", Stats);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // MY FUNCTIONS
    
    private void AddDemoData() {
    if (WorkingDB == null) {
        JOptionPane.showMessageDialog(this, "No database loaded.");
        return;
    }

    // ----- Drinks -----
    String[][] drinks = {
        {"Coca-Cola", "Coca-Cola", "Drink", "330", "ml", "139", "0", "35", "0"},
        {"Orange Juice", "Tropicana", "Drink", "250", "ml", "110", "2", "26", "0"},
        {"Iced Coffee", "Starbucks", "Drink", "250", "ml", "150", "5", "22", "5"},
        {"Green Tea", "Lipton", "Drink", "250", "ml", "0", "0", "0", "0"},
        {"Energy Drink", "Red Bull", "Drink", "250", "ml", "112", "1", "27", "0"},
        {"Chocolate Milk", "Nesquik", "Drink", "300", "ml", "170", "8", "25", "5"},
        {"Protein Shake", "MyProtein", "Drink", "330", "ml", "200", "20", "10", "7"},
        {"Almond Milk", "Alpro", "Drink", "250", "ml", "60", "2", "8", "2"},
        {"Fruit Smoothie", "Innocent", "Drink", "250", "ml", "150", "2", "34", "1"},
        {"Vitamin Water", "Glacéau", "Drink", "500", "ml", "120", "0", "32", "0"}
    };

    for (String[] d : drinks) {
        Meal m = new Meal(d[0], d[1], d[2], Double.valueOf(d[3]), d[4]);
        m.setMacros(Double.valueOf(d[5]), Double.valueOf(d[6]), Double.valueOf(d[7]), Double.valueOf(d[8]));
        WorkingDB.add(m);
    }

    // ----- Meals -----
    String[][] meals = {
        {"Chicken Burrito", "Chipotle", "Meal", "450", "g", "750", "42", "60", "28"},
        {"Cheeseburger", "McDonald's", "Meal", "300", "g", "530", "25", "41", "27"},
        {"Margherita Pizza", "Pizza Express", "Meal", "400", "g", "700", "30", "75", "25"},
        {"Pad Thai", "Thai Express", "Meal", "450", "g", "680", "20", "80", "20"},
        {"Beef Lasagna", "Stouffer's", "Meal", "370", "g", "600", "32", "45", "30"},
        {"Butter Chicken", "Patak's", "Meal", "400", "g", "650", "35", "50", "28"},
        {"Sushi Platter", "Itsu", "Meal", "350", "g", "520", "18", "65", "15"},
        {"Grilled Salmon", "Homemade", "Meal", "300", "g", "480", "35", "10", "30"},
        {"Tofu Stir-fry", "Wagamama", "Meal", "400", "g", "520", "22", "60", "20"},
        {"Pasta Alfredo", "Olive Garden", "Meal", "400", "g", "850", "20", "70", "50"}
    };

    for (String[] m : meals) {
        Meal meal = new Meal(m[0], m[1], m[2], Double.valueOf(m[3]), m[4]);
        meal.setMacros(Double.valueOf(m[5]), Double.valueOf(m[6]), Double.valueOf(m[7]), Double.valueOf(m[8]));
        WorkingDB.add(meal);
    }

    // ----- Snacks -----
    String[][] snacks = {
        {"Granola Bar", "Nature Valley", "Snack", "42", "g", "190", "3", "29", "7"},
        {"Trail Mix", "Kirkland", "Snack", "50", "g", "250", "6", "20", "15"},
        {"Potato Chips", "Lay's", "Snack", "28", "g", "150", "2", "15", "10"},
        {"Greek Yogurt", "Chobani", "Snack", "150", "g", "130", "12", "14", "4"},
        {"Protein Bar", "Quest", "Snack", "60", "g", "200", "20", "22", "8"},
        {"Popcorn", "Orville", "Snack", "30", "g", "120", "3", "21", "3"},
        {"Rice Cakes", "Quaker", "Snack", "18", "g", "70", "1", "14", "0"},
        {"Apple Slices", "Fresh", "Snack", "150", "g", "80", "0", "22", "0"},
        {"Nut Butter Pack", "Justin's", "Snack", "32", "g", "190", "6", "8", "16"},
        {"Chocolate Bar", "Cadbury", "Snack", "45", "g", "230", "2", "26", "13"}
    };

    for (String[] s : snacks) {
        Meal snack = new Meal(s[0], s[1], s[2], Double.valueOf(s[3]), s[4]);
        snack.setMacros(Double.valueOf(s[5]), Double.valueOf(s[6]), Double.valueOf(s[7]), Double.valueOf(s[8]));
        WorkingDB.add(snack);
    }

    JOptionPane.showMessageDialog(this, "30 demo meals added successfully.");
}

    private void loadDatabaseFiles() {
        File dir = new File("src/main/java/monnickendam/com/ia/dbs");

        if (!dir.exists() || !dir.isDirectory()) {
            JOptionPane.showMessageDialog(this, "Directory not found: " + dir.getAbsolutePath());
            return;
        }

        String[] files = dir.list((d, name) -> new File(d, name).isFile());

        if (files != null && files.length > 0) {
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

            for (String filename : files) {
                if (filename.endsWith(".db")) {
                    model.addElement(filename.substring(0, filename.length() - 3)); // remove ".db"
                } else {
                    model.addElement(filename); // fallback in case extension is missing
                }
            }

            DatabaseSelector.setModel(model);
        } else {
            JOptionPane.showMessageDialog(this, "No files found in directory.");
        }
    }
 
    private void SaveDB() {
        if (WorkingDB == null) {
            System.out.println("No database loaded to save.");
            return;
        }

        String dbName = DebugSHORT.getText(); // Get the base name, e.g., "MyDB"
        if (dbName == null || dbName.isEmpty()) {
            System.out.println("DebugSHORT is empty — cannot determine file name.");
            return;
        }

        // Sanitize filename
        dbName = dbName.replace(" ", "_");

        // Build file path
        File file = new File("src/main/java/monnickendam/com/ia/dbs", dbName + ".db");

        try {
            FileOutputStream fileOut = new FileOutputStream(file);
            ObjectOutputStream out = new ObjectOutputStream(fileOut);

            out.writeObject(WorkingDB);

            out.close();
            fileOut.close();

            System.out.println("Database saved to: " + file.getAbsolutePath());

        } catch (IOException e) {
            System.out.println("Failed to save database.");
            e.printStackTrace();
        }
    }

    private Boolean LoadDB(File file) {
        if (file == null || !file.exists()) {
            JOptionPane.showMessageDialog(this, "File not found.");
            return false;
        }

        try {
            // Open file input stream
            FileInputStream f = new FileInputStream(file);
            ObjectInputStream o = new ObjectInputStream(f);

            // Read the FoodDB object from file
            FoodDB loadedDB = (FoodDB) o.readObject();

            // Close streams
            o.close();
            f.close();

            // Set it as the current working database
            WorkingDB = loadedDB;
            System.out.println("Database loaded successfully from: " + file.getAbsolutePath());
            return true;

            // Optionally, update UI components if needed
            // updateUIWithDatabase(WorkingDB);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading database : " + e.getMessage());
            return false;
        }
    }

    private void RefreshDBInfo() {
        LabelTotalItems.setText(String.valueOf(WorkingDB.getItemCount()));
        LabelDrinkCount.setText(String.valueOf(WorkingDB.getDrinkCount()));
        LabelMealCount.setText(String.valueOf(WorkingDB.getMealCount()));
        LabelSnackCount.setText(String.valueOf(WorkingDB.getSnackCount()));
    }
    
    private void AddToMealList() {
    try {
        // Extract and parse values from the UI
        String name = nameField.getText();
        String brand = brandField.getText();
        String type = typeComboBox.getSelectedItem().toString();
        double size = Double.parseDouble(sizeField.getText());
        
        String sizeType;
        switch (type) {
            case "Drink" -> sizeType = "ml";
            case "Snack", "Meal" -> sizeType = "g";
            default -> sizeType = ""; // fallback or handle unknown type
        }

        double calories = Double.parseDouble(calorieField.getText());
        double protein = Double.parseDouble(proteinField.getText());
        double carbs = Double.parseDouble(carbField.getText());
        double fats = Double.parseDouble(fatField.getText());

        // Create Meal object
        Meal newMeal = new Meal(name, brand, type, size, sizeType);
        newMeal.setMacros(calories, protein, carbs, fats);

        // Add to DB
        WorkingDB.add(newMeal);

        // Optionally confirm or refresh UI
        JOptionPane.showMessageDialog(this, "Meal added successfully!");
        // Clear input fields
        nameField.setText("");
        brandField.setText("");
        sizeField.setText("");
        calorieField.setText("");
        proteinField.setText("");
        carbField.setText("");
        fatField.setText("");
        typeComboBox.setSelectedIndex(0);  // reset combo box to first item (optional)


        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid number in size/macros field.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error adding meal: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    
    // ALL BUTTON INTERACTIONS
    
    private void CreateDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateDBActionPerformed
        
        // CREATE DATABSE
        
        File dir = new File("src/main/java/monnickendam/com/ia/dbs");

        if (!dir.exists()) {
            if (!dir.mkdirs()) {
                System.out.println("Failed to create directory: " + dir.getAbsolutePath());
                return;
            }
        }

        String name = NewDBNameField.getText();
        StringBuilder sb = new StringBuilder(name);

        for (int i = 0; i < sb.length(); i++) {
            if (sb.charAt(i) == ' ') {
                sb.setCharAt(i, '_');
            }
        }

        name = sb.toString();

        File file = new File(dir, name + ".db");

        try {
            if (file.createNewFile()) {
                System.out.println("File created: " + file.getAbsolutePath());
                
                try {
                    // CREATE FILE STREAM
                    FileOutputStream f = new FileOutputStream(file);
                    ObjectOutputStream o = new ObjectOutputStream(f);
                    
                    // WRITE PERSON OBJECTS (p1 AND p2) TO THE FILE (CAN WRITE ALL OBJECTS IN A LINKEDLIST IF YOU USE A LOOP)
                    FoodDB newDB = new FoodDB();
                    o.writeObject(newDB);
                    
                    // CLOSE FILE STREAM
                    o.close();
                    f.close();
                    
                } catch (Exception e) {
                    System.out.println("Error.");
                }
                
            } else {
                System.out.println("File already exists: " + file.getAbsolutePath());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        NewDBNameField.setText(""); // Clear input
        
        loadDatabaseFiles();
    }//GEN-LAST:event_CreateDBActionPerformed

    private void RefreshListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshListActionPerformed
        loadDatabaseFiles();
    }//GEN-LAST:event_RefreshListActionPerformed

    private void ManualSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManualSaveActionPerformed
        SaveDB();
    }//GEN-LAST:event_ManualSaveActionPerformed

    private void DemoDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DemoDataActionPerformed
        AddDemoData();
    }//GEN-LAST:event_DemoDataActionPerformed

    private void LoadSelectedDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadSelectedDBActionPerformed
        String selected = DatabaseSelector.getSelectedItem().toString();
        String TempDBPath = "src/main/java/monnickendam/com/ia/dbs/" + selected + ".db";
        
        
        if (LoadDB(new File(TempDBPath))) {
            String baseName = selected;

            DebugSHORT.setText(baseName);             // e.g., "temp"
            DebugLONG.setText(baseName + ".db");      // e.g., "temp.db"
            DebugPATH.setText(TempDBPath);
            RefreshDBInfo();
        }
        

    }//GEN-LAST:event_LoadSelectedDBActionPerformed
    
    private void DBInfoRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DBInfoRefreshActionPerformed
        RefreshDBInfo();
    }//GEN-LAST:event_DBInfoRefreshActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AddToMealList();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        switch (typeComboBox.getSelectedItem().toString()) {
            case "Drink" -> UnitLabel.setText("ml");
            case "Snack", "Meal" -> UnitLabel.setText("g");
            default -> UnitLabel.setText(""); // fallback or handle unknown type
        }
    }//GEN-LAST:event_typeComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add;
    private javax.swing.JButton CreateDB;
    private javax.swing.JButton DBInfoRefresh;
    private javax.swing.JComboBox<String> DatabaseSelector;
    private javax.swing.JLabel DebugLONG;
    private javax.swing.JLabel DebugPATH;
    private javax.swing.JLabel DebugSHORT;
    private javax.swing.JButton DemoData;
    private javax.swing.JButton ExportDBToFile;
    private javax.swing.JLabel LabelDrinkCount;
    private javax.swing.JLabel LabelMealCount;
    private javax.swing.JLabel LabelSnackCount;
    private javax.swing.JLabel LabelTotalItems;
    private javax.swing.JButton LoadSelectedDB;
    private javax.swing.JButton ManualSave;
    private javax.swing.JPanel Meals;
    private javax.swing.JTextField NewDBNameField;
    private javax.swing.JButton RefreshList;
    private javax.swing.JPanel Stats;
    private javax.swing.JPanel Today;
    private javax.swing.JLabel UnitLabel;
    private javax.swing.JTextField brandField;
    private javax.swing.JTextField calorieField;
    private javax.swing.JTextField carbField;
    private javax.swing.JTextField fatField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JPanel infoPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel macroPanel;
    private javax.swing.JTextField mealSearch;
    private javax.swing.JTable mealsTable;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField proteinField;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JLabel quantityLabel1;
    private javax.swing.JTextField sizeField;
    private javax.swing.JComboBox<String> typeComboBox;
    // End of variables declaration//GEN-END:variables

}
